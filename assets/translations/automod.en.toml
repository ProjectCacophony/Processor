"automod.not-dm" = "This module can not be used in DMs."

#help info
"automod.help.description" = "Set up automatic actions such as sending messages, kicking/banning users, and reacting with emojis. Define triggers, such as setting banned words, to trigger these actions."
"automod.help.status.name" = "Status"
"automod.help.status.description" = "Shows active rules"
"automod.help.elements.name" = "Elements"
"automod.help.elements.description" = "Shows all elements you can use for rules"
"automod.help.add.name" = "Add Rule"
"automod.help.add.description" = "Create a new rule"
"automod.help.remove.name" = "Remove Rule"
"automod.help.remove.description" = "Delete an existing rule"
"automod.help.log.name" = "Set Log Channel"
"automod.help.log.description" = "Sets the Automod Log channel to the current channel"
"automod.help.history.name" = "Rule History"
"automod.help.history.description" = "Shows recently executed Rules"

# cmdAdd
"automod.add.too-few" = "You didn't tell me enough information."
"automod.add.invalid-trigger-name" = "I was not able to find a trigger with that name."
"automod.add.invalid-trigger-value" = "The trigger values you told me are invalid: `{{.error}}.`"
"automod.add.invalid-filter-name" = "I was not able to find a filter with that name."
"automod.add.invalid-filter-value" = "The filter values you told me are invalid: `{{.error}}.`"
"automod.add.invalid-action-name" = "I was not able to find an action with that name."
"automod.add.invalid-action-value" = "The action values you told me are invalid: `{{.error}}.`"
"automote.add.success" = "**I added the rule!**\n\
Please keep in mind that it can take up to one minute until the rule will be applied.\n\
{{ if .logChannelID }}Looks like you have no Automod Log Channel set up so far.\n\
The log will be posted in <#{{.logChannelID}}>.{{ end }}\
"
"automod.add.confirm-update-duplicate" = "**There is already a rule with that name**\n\
Do you want to update that rule?\n\
Please react with ✅ if you do."
"automod.add.managed-duplicate" = "**There is already a managed rule with that name**\n\
Such rules can not be modified."

# cmdRemove
"automod.remove.too-few" = "Please tell me the name of the rule to remove."
"automod.remove.success" = "I removed the rule `{{.rule.Name}}`."
"automod.remove.not-found" = "I was not able to find a rule with that name."
"automod.remove.managed" = "**Managed rules can not be deleted**\n\
Please find out which integration created the rule, and delete it from there."

# cmdStatus
"automod.status.response" = "\
{{if gt (len .rules) 0}} \
{{range $rule := .rules}}\
Added {{TimeFormat $rule.CreatedAt $.timezone}} `{{HumanizeNumber $rule.Runs}}` times triggered\n\
{{if $rule.Managed}}Managed rule, cannot be modified.\n{{end}}\
```\n{{$rule.RuleText}}\n```\n\n\
{{end}}\
{{else}} \
**Looks like there are no rules on this server so far.** :thinking:\n\
You can create the first rule: `{{.prefix}}automod add […]` \
{{end}}\
{{ if .logChannelID }}The log will be posted in <#{{.logChannelID}}>.{{ end }}\
"

# cmdElements
"automod.elements.response" = "\
**Triggers**\n\
{{range $item := .triggers}}`{{$item.Name}}`: {{$item.Description}}\n{{end}}\
**Filters** (you can add `not` in front of a filter name)\n\
{{range $item := .filters}}`{{$item.Name}}`: {{$item.Description}}\n{{end}}\
**Actions**\n\
{{range $item := .actions}}`{{$item.Name}}`: {{$item.Description}}\n{{end}}\
**Text replacements**\n\
User: `{USER_USERNAME}`, `{USER_DISCRIMINATOR}`, `{USER_USERNAME_FULL}`, `{USER_MENTION}`, `{USER_AVATAR_URL}`, and `{USER_ID}`.\n\
Channel: `{CHANNEL_NAME}`, and `{CHANNEL_ID}`.\n\
Server: `{GUILD_NAME}`, `{GUILD_ICON_URL}`, and `{GUILD_ID}`.\n\
Message: `{MESSAGE_CONTENT}`, `{MESSAGE_LINK}`, and `{MESSAGE_ID}`.\n\
**Specials**\n\
`stop` at the end of a rule, to not allow further processing of the message after the rule ran.\n\
`silent` at the end of a rule, to not display executed rules in the automod log.\n\
"

# cmdLog
"automod.log.response" = "**I will post the Automod Log in <#{{.channel.ID}}>.**\n\
It may take up to one minute until the change will be applied."

# Triggers
"automod.triggers.when_message" = "Triggers when a new Message is sent.\n\
Does not trigger for Messages sent by Bots.\n\
Adds the Messages, the senders User, and the messages Channel to the Rule context. []"
"automod.triggers.when_bucket_updated" = "Triggers when a Bucket is updated.\n\
Restores Messages, Users, and Channels from the Bucket into the Rule Context. [tag]"
"automod.triggers.when_join" = "Triggers when a user joins the server.\n\
Adds the User to the Rule Context. []"
"automod.triggers.when_leave" = "Triggers when a user leaves the server.\n\
Adds the User to the Rule Context. []"
"automod.triggers.when_ban" = "Triggers when a user gets banned.\n\
Adds the User to the Rule Context. []"
"automod.triggers.when_unban" = "Triggers when a user gets unbanned.\n\
Adds the User to the Rule Context. []"

# Filters
"automod.filters.if_message_content_regex" = "Matches when the given RegEx matches with the Message Content. [regex]"
"automod.filters.if_true" = "Always matches."
"automod.filters.if_bucket_amount" = "Matches when the Bucket amount compares as specified with the given amount.\n\
Comparison Types: >, =, and < [comparison type; amount]"
"automod.filters.if_user_name_regex" = "Matches when the given RegEx matches with the Username.\n\
Does not include the User Discriminator. [regex]"
"automod.filters.if_account_age" = "Matches if the Users Account Age compares as specified with the given duration.\n\
Comparison Types: >, and < [comparison type; duration]"
"automod.filters.if_mentions_count" = "Matches if the number of Mentions of the Message compares as specified with the given amount.\n\
Comparison Types: >, =, and < [comparison type; amount]"
"automod.filters.if_emoji_count" = "Matches if the number of Emoji used in the Message compares as specified with the given amount.\n\
Comparison Types: >, =, and < [comparison type; amount]"
"automod.filters.if_channel_id" = "Matches when the given Channel ID matches with the Messages Channel ID. [Channel ID(s), separated by commas, no spaces]"
"automod.filters.if_channel" = "Matches when the given Channel matches with the Messages Channel. [Channel(s), separated by commas, no spaces]"
"automod.filters.if_attachments_count" = "Matches if the number of Attachment attached to the Message compares as specified with the given amount.\n\
Comparison Types: >, =, and < [comparison type; amount]"
"automod.filters.if_has_role_id" = "Matches if the User has all of the given Role IDs. [Role ID(s), separated by commas, no spaces]"
"automod.filters.if_is_user_id" = "Matches if the User has any of the given UserIDs. [User ID(s), separated by commas, no spaces]"
"automod.filters.if_invites_count" = "Matches if the number of Invites in the Message compares as specified with the given amount.\n\
Comparison Types: >, =, and < [comparison type; amount]"
"automod.filters.wait" = "Pauses the execution of the rule for the given duration.\n\
[duration]"

# Actions
"automod.actions.apply_role" = "Applies the given role. [role]"
"automod.actions.send_message" = "Sends the given message to all Channels in the Rule Context. [message content, or message code]"
"automod.actions.incr_bucket" = "Increases a leaky bucket.\n\
Stores eventual Messages, Users and Channels in the Rule Context.\n\
Types: guild, channel, or user [tag; type; decay duration; amount]"
"automod.actions.send_message_to" = "Sends the given message to the given channel. [message content, or message code; channel]"
"automod.actions.delete_message" = "Deletes all Message found in the Rule Context."
"automod.actions.kick_user" = "Kicks all Users found in the Rule Context."
"automod.actions.ban_user" = "Bans all Users found in the Rule Context."
"automod.actions.reset_bucket" = "Resets the amount of leaky bucket.\n\
Types: guild, channel, or user [tag; type]"
"automod.actions.react" = "Reacts with the given Emoji. [emoji…]"
"automod.actions.wait" = "Pauses the execution of the rule for the given duration.\n\
[duration]"

# cmdHistory
"automod.history.content" = "\
{{if le (len .logs) 0}}\
**No Rules have been executed so far**\n\
Start by adding some rules.\
{{else}}\
__**Last {{len .logs}} Rule executions**__\n\
{{range $log := .logs}}\
{{TimeFormatShort $log.CreatedAt $.timezone}}: \
{{if $log.Rule.Name}}`{{$log.Rule.Name}}`{{else}}**Rule Deleted**{{end}} \
{{if not $log.ErrorMessage}}✅{{else}}⚠ `{{$log.ErrorMessage}}`{{end}}\
\n\
{{end}}\
{{end}}\
"
